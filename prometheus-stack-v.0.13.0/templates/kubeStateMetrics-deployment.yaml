apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/part-of: kube-prometheus
  name: kube-state-metrics
  namespace: {{ .Values.common.namespace | default "monitoring" }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-prometheus
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: kube-state-metrics
      labels:
        app.kubernetes.io/component: exporter
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/part-of: kube-prometheus
    spec:
      automountServiceAccountToken: true
      containers:
      - args:
        - --host=127.0.0.1
        - --port=8081
        - --telemetry-host=127.0.0.1
        - --telemetry-port=8082
        {{- if .Values.metricLabelsAllowlist }}
        - --metric-labels-allowlist={{ .Values.metricLabelsAllowlist | join "," }}
        {{- end }}
        {{- if .Values.metricAnnotationsAllowList }}
        - --metric-annotations-allowlist={{ .Values.metricAnnotationsAllowList | join "," }}
        {{- end }}
        {{- if .Values.metricAllowlist }}
        - --metric-allowlist={{ .Values.metricAllowlist | join "," }}
        {{- end }}
        {{- if .Values.metricDenylist }}
        - --metric-denylist={{ .Values.metricDenylist | join "," }}
        {{- end }}
        image: {{ .Values.kubeStateMetrics.image | default "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.1" }}
        name: kube-state-metrics
        resources:
          limits:
            cpu: {{ .Values.kubeStateMetrics.limits.cpu | default "100m" }} 
            memory: {{ .Values.kubeStateMetrics.limits.memory | default "250Mi" }} 
          requests:
            cpu: 10m
            memory: 190Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
      - args:
        - --secure-listen-address=:8443
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - --upstream=http://127.0.0.1:8081/
        image: {{ .Values.common.image.proxy | default "quay.io/brancz/kube-rbac-proxy:v0.15.0" }}
        name: kube-rbac-proxy-main
        ports:
        - containerPort: 8443
          name: https-main
        resources:
          limits:
            cpu: 40m
            memory: 40Mi
          requests:
            cpu: 20m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
      - args:
        - --secure-listen-address=:9443
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - --upstream=http://127.0.0.1:8082/
        image: {{ .Values.common.image.proxy | default "quay.io/brancz/kube-rbac-proxy:v0.15.0" }}
        name: kube-rbac-proxy-self
        ports:
        - containerPort: 9443
          name: https-self
        resources:
          limits:
            cpu: 20m
            memory: 40Mi
          requests:
            cpu: 10m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
    {{- if .Values.common.nodeSelector }}
      nodeSelector: {{ toYaml .Values.common.nodeSelector | nindent 8 }}
    {{- end }}
    {{- if .Values.common.tolerations }}
      tolerations: {{ toYaml .Values.common.tolerations | nindent 8 }}
    {{- end }}                        
      serviceAccountName: kube-state-metrics
